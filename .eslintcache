[{"/home/junhyuck/todo-app/src/reportWebVitals.js":"1","/home/junhyuck/todo-app/src/App.js":"2","/home/junhyuck/todo-app/src/components/TodoTemplate.js":"3","/home/junhyuck/todo-app/src/components/TodoInsert.js":"4","/home/junhyuck/todo-app/src/components/TodoListItem.js":"5","/home/junhyuck/todo-app/src/components/TodoList.js":"6","/home/junhyuck/todo-app/src/index.js":"7"},{"size":362,"mtime":1607561185471,"results":"8","hashOfConfig":"9"},{"size":1764,"mtime":1607577313635,"results":"10","hashOfConfig":"9"},{"size":401,"mtime":1607562278602,"results":"11","hashOfConfig":"9"},{"size":895,"mtime":1607569189438,"results":"12","hashOfConfig":"9"},{"size":853,"mtime":1607580557088,"results":"13","hashOfConfig":"9"},{"size":969,"mtime":1607580305700,"results":"14","hashOfConfig":"9"},{"size":500,"mtime":1607561185471,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14pjxqp",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/junhyuck/todo-app/src/reportWebVitals.js",[],"/home/junhyuck/todo-app/src/App.js",["31"],"import React,{useReducer, useRef, useCallback} from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nfunction createBulkTodos() {\n  const array = [];\n  for (let i = 1; i <= 2500; i++) {\n    array.push({\n      id: i,\n      text: `할 일 ${i}`,\n      checked: false\n    });\n  }\n  return array;\n}\n\nfunction todoReducer(todos, action){\n  switch (action.type) {\n    case 'INSERT': //새로 추가\n      // {type: 'INSERT', todo: {id: 1, text: 'todo', checked: false}}\n      return todos.concat(action.todo);\n      break;\n    case 'REMOVE': //제거\n      // {type: 'REMOVE', id: 1}\n      return todos.filter(todo => todo.id !== action.id);\n    case 'TOGGLE': //토글\n      return todos.map(todo =>\n        todo.id === action.id ? {...todo, checked: !todo.checked} : todo\n      );\n    default:\n      return todos;\n  }\n}\n\nconst App = () => {\n  const [todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos);\n\n  // 고윳값으로 사용될 // id\n  // ref를 사용하여 변수 담기\n  const nextId = useRef(2501);\n\n  const onInsert = useCallback(\n    text => {\n      const todo ={\n        id: nextId.current,\n        text,\n        checked: false\n      };\n      dispatch({type: 'INSERT', todo});\n      nextId.current += 1; // nextId 1씩 더하기\n    },[]);\n\n  const onRemove = useCallback(\n    id => {\n      dispatch({type: 'REMOVE', id});\n    },[]);\n\n  const onToggle = useCallback(\n    id => {\n        dispatch({type: 'TOGGLE', id});\n    },[]);\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert}/>\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplate>\n  );\n};\n\nexport default App;\n","/home/junhyuck/todo-app/src/components/TodoTemplate.js",[],"/home/junhyuck/todo-app/src/components/TodoInsert.js",[],"/home/junhyuck/todo-app/src/components/TodoListItem.js",[],"/home/junhyuck/todo-app/src/components/TodoList.js",[],"/home/junhyuck/todo-app/src/index.js",[],{"ruleId":"32","severity":1,"message":"33","line":23,"column":7,"nodeType":"34","messageId":"35","endLine":23,"endColumn":13},"no-unreachable","Unreachable code.","BreakStatement","unreachableCode"]